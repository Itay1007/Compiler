.data
string_access_violation: .asciiz "Access Violation"
string_illegal_div_by_0: .asciiz "Division By Zero"
string_invalid_ptr_dref: .asciiz "Invalid Pointer Dereference"
.text
.text
main:
	jal global_initializations
	jal user_main
exit:
	li $v0,10
	syscall
__prologue__:
	move $fp,$sp
	subu $sp,$sp,4
	sw $t0,0($sp)
	subu $sp,$sp,4
	sw $t1,0($sp)
	subu $sp,$sp,4
	sw $t2,0($sp)
	subu $sp,$sp,4
	sw $t3,0($sp)
	subu $sp,$sp,4
	sw $t4,0($sp)
	subu $sp,$sp,4
	sw $t5,0($sp)
	subu $sp,$sp,4
	sw $t6,0($sp)
	subu $sp,$sp,4
	sw $t7,0($sp)
	subu $sp,$sp,4
	sw $t8,0($sp)
	subu $sp,$sp,4
	sw $t9,0($sp)
	jr $ra
__epilogue__:
	subu $fp,$fp,4
	lw $t0,0($fp)
	subu $fp,$fp,4
	lw $t1,0($fp)
	subu $fp,$fp,4
	lw $t2,0($fp)
	subu $fp,$fp,4
	lw $t3,0($fp)
	subu $fp,$fp,4
	lw $t4,0($fp)
	subu $fp,$fp,4
	lw $t5,0($fp)
	subu $fp,$fp,4
	lw $t6,0($fp)
	subu $fp,$fp,4
	lw $t7,0($fp)
	subu $fp,$fp,4
	lw $t8,0($fp)
	subu $fp,$fp,4
	lw $t9,0($fp)
	addu $fp,$fp,40
	lw $s0,0($fp)
	lw $ra,4($fp)
	addu $sp,$fp,8
	move $fp,$s0
	jr $ra
index_out_of_range_abort:
	la $a0,string_access_violation
	li $v0,4
	syscall
	j exit
division_by_zero_abort:
	la $a0,string_illegal_div_by_0
	li $v0,4
	syscall
	j exit
invalid_ptr_dref_abort:
	la $a0,string_invalid_ptr_dref
	li $v0,4
	syscall
	j exit
_strcmp_:
	subu $sp,$sp,4
	sw $s7,0($sp)
	subu $sp,$sp,4
	sw $s6,0($sp)
	subu $sp,$sp,4
	sw $s5,0($sp)
	subu $sp,$sp,4
	sw $s4,0($sp)
	subu $sp,$sp,4
	sw $s3,0($sp)
	subu $sp,$sp,4
	sw $s2,0($sp)
	subu $sp,$sp,4
	sw $s1,0($sp)
	subu $sp,$sp,4
	sw $s0,0($sp)
	subu $sp,$sp,4
	sw $ra,0($sp)
	li $v0,1
_strcmp_loop_:
	lb $s2,0($s0)
	lb $s3,0($s1)
	bne $s2,$s3,_strcmp_noteq_
	beq $s2,0,_strcmp_end_
	addu $s0,$s0,1
	addu $s1,$s1,1
	j _strcmp_loop_
_strcmp_noteq_:
	li $v0,0
_strcmp_end_:
	lw $ra,0($sp)
	addu $sp,$sp,4
	lw $s0,0($sp)
	addu $sp,$sp,4
	lw $s1,0($sp)
	addu $sp,$sp,4
	lw $s2,0($sp)
	addu $sp,$sp,4
	lw $s3,0($sp)
	addu $sp,$sp,4
	lw $s4,0($sp)
	addu $sp,$sp,4
	lw $s5,0($sp)
	addu $sp,$sp,4
	lw $s6,0($sp)
	addu $sp,$sp,4
	lw $s7,0($sp)
	addu $sp,$sp,4
	jr $ra
_strsize_:
	subu $sp,$sp,4
	sw $s7,0($sp)
	subu $sp,$sp,4
	sw $s6,0($sp)
	subu $sp,$sp,4
	sw $s5,0($sp)
	subu $sp,$sp,4
	sw $s4,0($sp)
	subu $sp,$sp,4
	sw $s3,0($sp)
	subu $sp,$sp,4
	sw $s2,0($sp)
	subu $sp,$sp,4
	sw $s1,0($sp)
	subu $sp,$sp,4
	sw $s0,0($sp)
	subu $sp,$sp,4
	sw $ra,0($sp)
	li $v0,0
_strsize_loop_:
	lb $s2,0($s0)
	beqz $s2,_strsize_end_
	addu $s0,$s0,1
	add $v0,$v0,1
	j _strsize_loop_
_strsize_end_:
	lw $ra,0($sp)
	addu $sp,$sp,4
	lw $s0,0($sp)
	addu $sp,$sp,4
	lw $s1,0($sp)
	addu $sp,$sp,4
	lw $s2,0($sp)
	addu $sp,$sp,4
	lw $s3,0($sp)
	addu $sp,$sp,4
	lw $s4,0($sp)
	addu $sp,$sp,4
	lw $s5,0($sp)
	addu $sp,$sp,4
	lw $s6,0($sp)
	addu $sp,$sp,4
	lw $s7,0($sp)
	addu $sp,$sp,4
	jr $ra
_strcpy_:
	subu $sp,$sp,4
	sw $s7,0($sp)
	subu $sp,$sp,4
	sw $s6,0($sp)
	subu $sp,$sp,4
	sw $s5,0($sp)
	subu $sp,$sp,4
	sw $s4,0($sp)
	subu $sp,$sp,4
	sw $s3,0($sp)
	subu $sp,$sp,4
	sw $s2,0($sp)
	subu $sp,$sp,4
	sw $s1,0($sp)
	subu $sp,$sp,4
	sw $s0,0($sp)
	subu $sp,$sp,4
	sw $ra,0($sp)
_strcpy_loop_:
	lb $s2,0($s1)
	beqz $s2,_strcpy_end_
	sb $s2,0($s0)
	addu $s0,$s0,1
	addu $s1,$s1,1
	j _strcpy_loop_
_strcpy_end_:
	lb $s2,0($s0)
	lw $ra,0($sp)
	addu $sp,$sp,4
	lw $s0,0($sp)
	addu $sp,$sp,4
	lw $s1,0($sp)
	addu $sp,$sp,4
	lw $s2,0($sp)
	addu $sp,$sp,4
	lw $s3,0($sp)
	addu $sp,$sp,4
	lw $s4,0($sp)
	addu $sp,$sp,4
	lw $s5,0($sp)
	addu $sp,$sp,4
	lw $s6,0($sp)
	addu $sp,$sp,4
	lw $s7,0($sp)
	addu $sp,$sp,4
	jr $ra
_stradd_:
	subu $sp,$sp,4
	sw $s7,0($sp)
	subu $sp,$sp,4
	sw $s6,0($sp)
	subu $sp,$sp,4
	sw $s5,0($sp)
	subu $sp,$sp,4
	sw $s4,0($sp)
	subu $sp,$sp,4
	sw $s3,0($sp)
	subu $sp,$sp,4
	sw $s2,0($sp)
	subu $sp,$sp,4
	sw $s1,0($sp)
	subu $sp,$sp,4
	sw $s0,0($sp)
	subu $sp,$sp,4
	sw $ra,0($sp)
	move $s5,$s0
	move $s6,$s1
	move $s0,$s0
	jal _strsize_
	move $s2, $v0
	move $s0,$s1
	jal _strsize_
	addu $s2,$s2,$v0
	move $a0,$s2
	addu $a0,$a0,1
	li $v0,9
	syscall
	move $s3,$v0
	move $s0,$s5
	move $s1,$s6
_stradd_loop_1_:
	lb $s2,0($s0)
	beqz $s2,_stradd_loop_2_
	sb $s2,0($s3)
	addu $s3,$s3,1
	addu $s0,$s0,1
	j _stradd_loop_1_
_stradd_loop_2_:
	lb $s2,0($s1)
	beqz $s2,_stradd_end_
	sb $s2,0($s3)
	addu $s3,$s3,1
	addu $s1,$s1,1
	j _stradd_loop_2_
_stradd_end_:
	sb $s2,0($s3)
	lw $ra,0($sp)
	addu $sp,$sp,4
	lw $s0,0($sp)
	addu $sp,$sp,4
	lw $s1,0($sp)
	addu $sp,$sp,4
	lw $s2,0($sp)
	addu $sp,$sp,4
	lw $s3,0($sp)
	addu $sp,$sp,4
	lw $s4,0($sp)
	addu $sp,$sp,4
	lw $s5,0($sp)
	addu $sp,$sp,4
	lw $s6,0($sp)
	addu $sp,$sp,4
	lw $s7,0($sp)
	addu $sp,$sp,4
	jr $ra
PrintInt:
	subu $sp,$sp,4
	sw $ra,0($sp)
	subu $sp,$sp,4
	sw $fp,0($sp)
	jal __prologue__
	subu $sp,$sp,0
	subu $sp,$sp,4
	sw $a0,0($sp)
	lw $a0, 12($fp)
	li $v0, 1
	syscall
	li $a0, 32
	li $v0, 11
	syscall
	lw $a0, 0($sp)
	addu $sp,$sp,4
	j __epilogue__
PrintString:
	subu $sp,$sp,4
	sw $ra,0($sp)
	subu $sp,$sp,4
	sw $fp,0($sp)
	jal __prologue__
	subu $sp,$sp,0
	subu $sp,$sp,4
	sw $a0,0($sp)
	lw $a0, 12($fp)
	li $v0, 4
	syscall
	lw $a0, 0($sp)
	addu $sp,$sp,4
	j __epilogue__
_bind_int_:
	subu $sp,$sp,4
	sw $s7,0($sp)
	subu $sp,$sp,4
	sw $s6,0($sp)
	subu $sp,$sp,4
	sw $s5,0($sp)
	subu $sp,$sp,4
	sw $s4,0($sp)
	subu $sp,$sp,4
	sw $s3,0($sp)
	subu $sp,$sp,4
	sw $s2,0($sp)
	subu $sp,$sp,4
	sw $s1,0($sp)
	subu $sp,$sp,4
	sw $s0,0($sp)
	subu $sp,$sp,4
	sw $ra,0($sp)
	ble $s0,$s1,_bind_int_minimum_
	bge $s0,$s2,_bind_int_maximum_
	j _bind_int_end_
_bind_int_minimum_:
	move $s0,$s1
	j _bind_int_end_
_bind_int_maximum_:
	move $s0,$s2
_bind_int_end_:
	move $v0,$s0
	lw $ra,0($sp)
	addu $sp,$sp,4
	lw $s0,0($sp)
	addu $sp,$sp,4
	lw $s1,0($sp)
	addu $sp,$sp,4
	lw $s2,0($sp)
	addu $sp,$sp,4
	lw $s3,0($sp)
	addu $sp,$sp,4
	lw $s4,0($sp)
	addu $sp,$sp,4
	lw $s5,0($sp)
	addu $sp,$sp,4
	lw $s6,0($sp)
	addu $sp,$sp,4
	lw $s7,0($sp)
	addu $sp,$sp,4
	jr $ra
global_initializations:
.data
	global_i: .word 0
.text
	li $t0,1
	sw $t0,global_i
.data
	global_j: .word 0
.text
.data
	global_p: .word 0
.text
	li $t0,1
	sw $t0,global_p
.data
	global_start: .word 0
.text
.data
	global_end: .word 0
.text
.data
	global_isPrime: .word 0
.text
.data
	global_copyp: .word 0
.text
.data
	global_copyisPrime: .word 0
.text
	jr $ra
user_main:
	subu $sp,$sp,4
	sw $ra,0($sp)
	subu $sp,$sp,4
	sw $fp,0($sp)
	jal __prologue__
	subu $sp,$sp,0
	li $t0,2
	sw $t0,global_p
	li $t0,2
	sw $t0,global_start
	li $t0,100
	sw $t0,global_end
Label_1_start:
	lw $t2,global_p
	lw $t1,global_end
	li $t0,1
	add $t0,$t1,$t0
	move $s0,$t0
	li $s1,-32768
	li $s2,32767
	jal _bind_int_
	move $t0,$v0
	blt $t2,$t0,Label_11_AssignOne
	bge $t2,$t0,Label_12_AssignZero
Label_11_AssignOne:
	li $t0,1
	j Label_10_end
Label_12_AssignZero:
	li $t0,0
	j Label_10_end
Label_10_end:
	beqz $t0,Label_0_end
	li $t0,2
	sw $t0,global_i
	li $t0,2
	sw $t0,global_j
	li $t0,1
	sw $t0,global_isPrime
Label_3_start:
	lw $t1,global_i
	lw $t0,global_p
	blt $t1,$t0,Label_14_AssignOne
	bge $t1,$t0,Label_15_AssignZero
Label_14_AssignOne:
	li $t0,1
	j Label_13_end
Label_15_AssignZero:
	li $t0,0
	j Label_13_end
Label_13_end:
	beqz $t0,Label_2_end
	li $t0,2
	sw $t0,global_j
Label_5_start:
	lw $t1,global_j
	lw $t0,global_p
	blt $t1,$t0,Label_17_AssignOne
	bge $t1,$t0,Label_18_AssignZero
Label_17_AssignOne:
	li $t0,1
	j Label_16_end
Label_18_AssignZero:
	li $t0,0
	j Label_16_end
Label_16_end:
	beqz $t0,Label_4_end
	lw $t0,global_p
	sw $t0,global_copyp
Label_7_start:
	lw $t1,global_i
	lw $t0,global_j
	mul $t1,$t1,$t0
	move $s0,$t1
	li $s1,-32768
	li $s2,32767
	jal _bind_int_
	move $t1,$v0
	lw $t0,global_copyp
	beq $t1,$t0,Label_20_AssignOne
	bne $t1,$t0,Label_21_AssignZero
Label_20_AssignOne:
	li $t0,1
	j Label_19_end
Label_21_AssignZero:
	li $t0,0
	j Label_19_end
Label_19_end:
	beqz $t0,Label_6_end
	li $t0,0
	sw $t0,global_isPrime
	li $t0,0
	sw $t0,global_copyp
	j Label_7_start
Label_6_end:
	lw $t1,global_j
	li $t0,1
	add $t0,$t1,$t0
	move $s0,$t0
	li $s1,-32768
	li $s2,32767
	jal _bind_int_
	move $t0,$v0
	sw $t0,global_j
	j Label_5_start
Label_4_end:
	lw $t1,global_i
	li $t0,1
	add $t0,$t1,$t0
	move $s0,$t0
	li $s1,-32768
	li $s2,32767
	jal _bind_int_
	move $t0,$v0
	sw $t0,global_i
	j Label_3_start
Label_2_end:
	lw $t0,global_isPrime
	sw $t0,global_copyisPrime
Label_9_start:
	lw $t0,global_copyisPrime
	beqz $t0,Label_8_end
	lw $t0,global_p
	subu $sp,$sp,4
	sw $t0,0($sp)
	addu $sp,$sp,4
	subu $sp,$sp,4
	subu $sp,$sp,4
	jal PrintInt
	li $t0,0
	sw $t0,global_copyisPrime
	j Label_9_start
Label_8_end:
	lw $t1,global_p
	li $t0,1
	add $t0,$t1,$t0
	move $s0,$t0
	li $s1,-32768
	li $s2,32767
	jal _bind_int_
	move $t0,$v0
	sw $t0,global_p
	j Label_1_start
Label_0_end:
epilogue_user_main:
	j __epilogue__
